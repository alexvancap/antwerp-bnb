{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  currentSlide: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'TICK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tick: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/alexandervancappellen/Desktop/development/antwerp-bnb/src/store/Index.reducer.js"],"names":["initialState","currentSlide","reducer","state","action","type","HYDRATE","payload","tick"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,OAAL;AACI,6CAAWH,KAAX,GAAqBC,MAAM,CAACG,OAA5B;;AACJ,SAAK,MAAL;AACI,6CAAWJ,KAAX;AAAkBK,QAAAA,IAAI,EAAEJ,MAAM,CAACG;AAA/B;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQD,CATD;;AAWA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  currentSlide: 0\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n      case HYDRATE:\n          return {...state, ...action.payload};\n      case 'TICK':\n          return {...state, tick: action.payload};\n      default:\n          return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}